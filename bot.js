const TelegramBot = require('node-telegram-bot-api');
const voiceHandler = require('./voiceHandler');
const UserTG = require('./models/UserTG');
const generatePlan = require('./generatePlan');


const token = process.env.TELEGRAM_BOT_TOKEN;

const bot = new TelegramBot(token, { polling: true });

generatePlan.mongoConnect(bot)

const start = () => {
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    bot.on('voice', (msg) => {
        voiceHandler.handleVoiceMessage(bot, msg);
    });

    // –û—Ç–≤–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
    bot.onText(/\/start/, async (msg) => {
        const chatId = msg.chat.id;
        const username = msg.from.username;
        console.log(chatId);
        
    
        // –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        let user = await UserTG.findOne({ username });
        
        if (!user) {
            // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ —Å chatId
            user = new UserTG({ username, chatId, plans: [] });
            await user.save();
            console.log(`–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: ${username}`);
        } else {
            // –û–±–Ω–æ–≤–ª—è–µ–º chatId, –µ—Å–ª–∏ –æ–Ω –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω
            if (!user.chatId) {
                user.chatId = chatId;
                await user.save();
                console.log(`ChatId –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${username} –æ–±–Ω–æ–≤–ª–µ–Ω`);
            }
        }
    
        bot.sendMessage(chatId, `üëã –ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –ª–∏—á–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—é –¥–Ω—è. –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –≥–¥–µ —Ç—ã —Ä–∞—Å—Å–∫–∞–∂–µ—à—å –æ —Å–≤–æ–∏—Ö –¥–µ–ª–∞—Ö –Ω–∞ —Å–µ–≥–æ–¥–Ω—è, –Ω–µ –±–µ—Å–ø–æ–∫–æ—è—Å—å –æ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è ‚Äî —è –≤—Å–µ —Å–∞–º —Ä–∞—Å–ø–ª–∞–Ω–∏—Ä—É—é! ‚è∞

‚ú® –ú–æ–π –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç —Å–æ–±–µ—Ä–µ—Ç —Ç–≤–æ–∏ –∑–∞–¥–∞—á–∏ –≤ —É–¥–æ–±–Ω—ã–π —Ä–∞—Å–ø–æ—Ä—è–¥–æ–∫ –∏ –ø—Ä–∏—à–ª–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –Ω—É–∂–Ω–æ–µ –≤—Ä–µ–º—è. –ë—É–¥—å –≥–æ—Ç–æ–≤ –∫ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ–º—É –¥–Ω—é ‚Äî —Ç—ã —Å–ø—Ä–∞–≤–∏—à—å—Å—è –Ω–∞ –≤—Å–µ 100%! üí™

üìÖ –û—Ç–ø—Ä–∞–≤–ª—è–π –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏ –Ω–∞—á–Ω–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —Ç–≤–æ–π –∏–¥–µ–∞–ª—å–Ω—ã–π –¥–µ–Ω—å! üéØ`);
    });

    bot.on('message', async (msg) => {
        const chatId = msg.chat.id;
        const username = msg.from.username;
        const text = msg.text;

        // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –∫–æ–º–∞–Ω–¥—É /start
        if (msg.voice || text === '/start') {
            return;
        }

        bot.sendMessage(chatId, `–ó–∞–≥—Ä—É–∑–∫–∞...`);

        const plan = await generatePlan.generatePlan(text, username, bot)

        bot.sendMessage(chatId, plan);
    });
};

const sendMessageToAllUsers = async (message) => {
    try {
        const users = await UserTG.find(); // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö

        users.forEach(async (user) => {
            if (user.chatId) {
                try {
                    await bot.sendMessage(user.chatId, message); // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∂–¥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                    console.log(`–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${user.username}`);
                } catch (err) {
                    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${user.username}:`, err);
                }
            }
        });
    } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', err);
    }
};

module.exports = { start, sendMessageToAllUsers };